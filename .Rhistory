reg1 <- lm(values~herkomstland,immdat)
summary(reg1)
reg2 <- lm(nettohh_f~herkomstland,immdat)
reg2
immdat$immdat
immdat$ka13a085
table(immdat$ka13a085)
reg3 <- lm(ka13a085~herkomstland,immdat)
immdat$ka13a056
car::recode(immdat$ka13a056,"1=1;else=0")
immdat$voted <- car::recode(immdat$ka13a056,"1=1;else=0")
reg4 <- glm(voted~herkomstland+oplzon+leeftijd,immdat,family="binomial")
library(texreg)
htmlreg(l = list(reg1,reg2,reg3,reg))
htmlreg(l = list(reg1,reg2,reg3,reg4))
screenreg(l = list(reg1,reg2,reg3,reg4))
reg4 <- glm(voted~herkomstland+as.factor(oplzon(+leeftijd,immdat,family="binomial")
reg4 <- glm(voted~herkomstland+as.factor(oplzon)+leeftijd,immdat,family="binomial")
reg4 <- glm(voted~herkomstland+as.factor(oplzon)+leeftijd,immdat,family="binomial")
screenreg(l = list(reg1,reg2,reg3,reg4))
as.factor(immdat$herkomstland)
library(texreg)[2:7]
as.factor(immdat$herkomstland)[2:7]
levels(immdat$herkomstland)[2:7]
levels(as.factor(immdat$herkomstland)[2:7]
levels(as.factor(immdat$herkomstland))[2:7]
levels(as.factor(immdat$herkomstland))[2:7]
screenreg(l = list(reg1,reg2,reg3,reg4))
immdat$oplzon
table(immdat$oplzon)
screenreg(l = list(reg1,reg2,reg3,reg4),custom.coef.names = c("Intercept",levels(as.factor(immdat$herkomstland))[2:7],"vmbo","hav o","mbo","hbo","wo","other","none")
screenreg(l = list(reg1,reg2,reg3,reg4),custom.coef.names = c("Intercept",levels(as.factor(immdat$herkomstland))[2:7],"vmbo","hav o","mbo","hbo","wo","other","none"))
screenreg(l = list(reg1,reg2,reg3,reg4),custom.coef.names = c("Intercept",levels(as.factor(immdat$herkomstland))[2:7],"vmbo","hav o","mbo","hbo","wo","other","none"))
screenreg(l = list(reg1,reg2,reg3,reg4))
screenreg(l = list(reg1,reg2,reg3,reg4),custom.coef.names = c("Intercept",levels(as.factor(immdat$herkomstland))[2:8],"vmbo","havo","mbo","hbo","wo","other","none"),"Age")
screenreg(l = list(reg1,reg2,reg3,reg4),custom.coef.names = c("Intercept",levels(as.factor(immdat$herkomstland))[2:8],"vmbo","havo","mbo","hbo","wo","other","none","Age")
screenreg(l = list(reg1,reg2,reg3,reg4),custom.coef.names = c("Intercept",levels(as.factor(immdat$herkomstland))[2:8],"vmbo","havo","mbo","hbo","wo","other","none","Age"))
screenreg(l = list(reg1,reg2,reg3,reg4),custom.coef.names = c("Intercept",levels(as.factor(immdat$herkomstland))[2:8],"vmbo","havo","mbo","hbo","wo","other","none","Age"))
reg1$
immdat$
reg1
summary(reg1)
round(summary(reg1)$coefficients[2,2],2)
round(reg1[2],2)
reg1[2]
levels(immdat$herkomstland)
levels(as.factor(immdat$herkomstland))
library(dplyr)
flights <- tbl_df(read.csv("~/Dropbox/R_wav/data/flights.csv"))
flights$time
flights$dest
flights$carrier
flights$time
flights$dep
names(flights)
mutate(flights,caughtup=dep_delay-arr_delay)
ob1 <- mutate(flights,caughtup=dep_delay-arr_delay)
ob2 <- group_by(flights,carrier)
ob3 <- summarise(ob2,mean_caughtup=mean(caughtup))
ob1 <- mutate(flights,caughtup=dep_delay-arr_delay)
ob2 <- group_by(ob1,carrier)
ob3 <- summarise(ob2,mean_caughtup=mean(caughtup))
ob3
ob3 <- summarise(ob2,mean_caughtup=mean(caughtup,na.rm=T))
ob3
ob4 <- arrange(ob3,mean_caughtup)
ob4
ob4 <- arrange(ob3,desc(mean_caughtup))
ob4
flights %>% mutate(caughtup=dep_delay-arr_delay)
flights %>%
mutate(caughtup=dep_delay-arr_delay) %>%
group_by(carrier) %>%
summarise(mean_caughtup=mean(caughtup,na.rm=T)) %>%
arrange(desc(mean_caughtup))
arrange(desc(mean_caughtup)) -> carrierscaughtup
flights %>%
mutate(caughtup=dep_delay-arr_delay) %>%
group_by(carrier) %>%
summarise(mean_caughtup=mean(caughtup,na.rm=T)) %>%
arrange(desc(mean_caughtup)) -> carrierscaughtup
head(carrierscaughtup)
pantheria <-
"http://esapubs.org/archive/ecol/E090/184/PanTHERIA_1-0_WR05_Aug2008.txt"
download.file(pantheria, destfile = "mammals.txt")
mammals <- read.table("mammals.txt", sep = "\t", header = TRUE,
stringsAsFactors = FALSE)
names(mammals) <- sub("X[0-9._]+", "", names(mammals))
names(mammals) <- sub("MSW05_", "", names(mammals))
mammals <- dplyr::select(mammals, Order, Binomial, AdultBodyMass_g,
AdultHeadBodyLen_mm, HomeRange_km2, LitterSize)
names(mammals) <- gsub("([A-Z])", "_\\L\\1", names(mammals), perl = TRUE)
names(mammals) <- gsub("^_", "", names(mammals), perl = TRUE)
mammals[mammals == -999] <- NA
names(mammals)[names(mammals) == "binomial"] <- "species"
mammals <- dplyr::tbl_df(mammals) # for prettier printing
mammals
save(mammals,file="data/mammals.RData")
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/mammals.RData")))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/mammals.RData"))
rm(list=c(ls()))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/mammals.RData"))
load("~/Dropbox/sharelatex/Speed and PK/Data/Ookla/speedcbsa.RData")
load("~/Dropbox/sharelatex/Speed and PK/Data/Post-Stratification/formrp_cbsa.RData")
formrp$race4
load("~/Dropbox/sharelatex/Speed and PK/Data/mrpscores.RData")
load("~/Dropbox/sharelatex/Speed and PK/.RData")
library(noncensus)
data(counties)
counties$population
cbsafips <- read.csv("Data/Crosswalks/fipscodecbsa.csv")
cbsafips <- read.csv("~/Dropbox/sharelatex/Speed and PK/Data/Crosswalks/fipscodecbsa.csv")
cbsacounty
speed <- read.csv("~/Dropbox/sharelatex/Speed and PK/Data/Ookla/speedcbsa.RData")
load("~/Dropbox/sharelatex/Speed and PK/Data/Ookla/speedcbsa.RData")
cbsafips$cbsa
cbsafips$county
speedfips <-merge(cbsafips,speedcbsa,by="cbsa")
speedfips
save(speedfips,file = "data/speedcbsa.RData")
library(UScensus2010)
data(UScensuu)
library(UScensus2010)
data(counties)
data("quick_facts", package="noncensus")
library(leaflet)
library(noncensus)
library(dplyr)
data("quick_facts", package="noncensus")
install.packages("noncensus")
install.packages("noncensus")
data("quick_facts", package="noncensus")
library(devtools)
install_github('ramhiser/noncensus')
data("quick_facts", package="noncensus")
names(quick_facts)
with(quick_facts,data.frame(percent_BA,per_capita_income
,percent_white, percent_black, population_2013, land_area))
with(quick_facts,data.frame(fipscode,percent_BA,per_capita_income
,percent_white, percent_black, population_2013, land_area))
quick_facts$fips
with(quick_facts,data.frame(fips,percent_BA,per_capita_income
,percent_white, percent_black, population_2013, land_area))
countydems <- with(quick_facts,data.frame(fips,percent_BA,per_capita_income
,percent_white, percent_black, population_2013, land_area))
countydems$fips
speedfips$
county
speedfips$county
nchar()
nchar(countydems$fips)
library(stringr)
dcast(countydems,cbsa~.)
library(reshape2)
dcast(countydems,cbsa~.)
merge(quick_facts,speedfips,by.x="fips",by.y="county")
out <- merge(quick_facts,speedfips,by.x="fips",by.y="county")
dcast(out,cbsa+year~.)
dcast(out,.~cbsa)
dcast(out,cbsa+year~percent_male)
dcast(out,cbsa+year~percent_white)
lm(mammals$litter_size~mammals$adult_body_mass_g+mammals$species)
lm(mammals$litter_size~mammals$adult_body_mass_g+mammals$adult_head_body_len_mm)
install.packages("Coefplot")
install.packages("coefplot")
library(coefplot)
mammals$order
table(mammals$order)
mtcars$mpg
mtcars$hp
mtcars$gear
mtcars$disp
mtcars$gear
mtcars$vs
?mtcars
lm(mpg~hp+gear+wt)
lm(mpg~hp+gear+wt,mtcars)
reg1 <- lm(mpg~hp+gear+wt,mtcars)
coefplot(reg1)
speed$RDX2
mpg$year
mpg$cty
mpg$manufacturer
mpg$class
mpg$cyl
reg1 <- lm(cty~cyl+class+as.factor(year),mpg)
coefplot(reg1)
coefplot(reg1,labels = c("Year","SUV","Sub-Compact","Pickup","Minivan","Midsize","Compact","Cylinders"),intercept = F)
?coefplot
coefplot(reg1,predictors = c("Year","SUV","Sub-Compact","Pickup","Minivan","Midsize","Compact","Cylinders"),intercept = F)
coefplot(reg1,predictors = "year",intercept = F)
coefplot(reg1,,intercept = F)
coefplot(reg1,intercept = F)
library(effects)
reg1 <- lm(cty~cyl*as.factor(year),mpg)
summary(reg1)
mpg$trans
library(Ecdat)
data(Icecream)
lm(formula = Consumption ~ Price * Temperature, data = Icecre)
lm(formula = Consumption ~ Price * Temperature, data = Icecream)
Icecream$cons
Icecream$price
Icecream$temp
summary(lm(formula = cons ~ price * temp, data = Icecream))
?Icecream
summary(lm(formula = cons ~ price * income, data = Icecream))
r1 <- lm(formula = cons ~ price * income, data = Icecream)
effect(r1,term="price*income")
eff1 <- effect(r1,term="price*income")
eff1
eff1$lower
eff1$fit
eff1$variables
plot(eff1)
plot(eff1,multiline=T)
plot(eff1)
eff1$x.all
eff1$fit
eff1$variables
eff1$x
data(Highway1)
library(car)
data(Highway1)
?Highway1
data(ToothGrowth)
data(tips)
library(reshape2)
tips$tip
tips$total_bill
tips$smoker
tips$sex
lm(tip~total_bill*smoker*sex,tips)
summary(lm(tip~total_bill*smoker*sex,tips))
summary(lm(tip~total_bill*sex,tips))
source('~/.active-rstudio-document', echo=TRUE)
summary(lm(tip~total_bill+sex,tips))
tips$size
summary(lm(tip~total_bill+sex*size,tips))
summary(lm(tip~total_bill+sex+size,tips))
summary(lm(tip~total_bill*size+sex,tips))
tips$time
summary(lm(tip~total_bill+size*time+sex,tips))
summary(lm(tip~total_bill+size+time+sex,tips))
summary(lm(tip~total_bill+size+time*sex,tips))
data <- foreign::read.spss("~/Dropbox/R_wav/data/threeway.sav")
data$a
lm(y~a*b*c,data)
summary(lm(y~a*b*c,data))
summary(lm(y~a*b+c,data))
out <- (lm(y~a*b*c,data))
j <- effect(out,term="a*b*c")
plot(j)
plot(j,multiline=T)
out <- (lm(y~a+b+c,data))
1. summary(out)
summary(out)
summary(out)
summary(j)
plot(eff1,multiline=T)
plot(eff1)
library(slidify)
load("~/Dropbox/sharelatex/Speed and PK/Data/mrpscore_cbsa.RData")
load("~/Dropbox/sharelatex/Speed and PK/Data/mrpspeed.RData")
mrpspeed$cbsa
library(stringr)
mrpspeed$cbsa
string <- mrpspeed$cbsa
num.chars <- nchar(string)
starts <- seq(1,num.chars, by=2)
starts <- mapply(FUN = function(x)seq(1,x, by=2),num.chars)
starts
sapply(starts, function(ii) {
substr(string, ii, ii+1)
})
nchar(string)
num.chars
starts
head(string)
sapply(starts, function(ii) {
substr(string, ii, ii+1)
}) -> out
out
out <- sapply(function(x)substring(x, 2, nchar(x)),mrpspeed$cbsa)
out <- mapply(function(x)substring(x, 2, nchar(x)),mrpspeed$cbsa)
otu
out
out <- mapply(function(x)substring(x, 4, nchar(x)),mrpspeed$cbsa)
out
out <- mapply(function(x)substring(x, 0, 2),mrpspeed$cbsa)
out
data(state.fips)
library(maps)
data(state.fips)
state.fips
str_pad(state.fips,width=2,side = "left",pad = "0")
str_pad(state.fips$fips,width=2,side = "left",pad = "0")
sfips <- str_pad(state.fips$fips,width=2,side = "left",pad = "0")
out
state.fips$sfips <- str_pad(state.fips$fips,width=2,side = "left",pad = "0")
state.fips$abb[match(sfips,out)]
sfips
state.fips$abb[match(state.fips$sfips,fips,out)]
state.fips$abb[match(state.fips$sfips,out)]
state.fips$sfips
out
out
mrpspeed$cbsa
fips <- load("~/Dropbox/sharelatex/Speed and PK/Data/Crosswalks/fipscodecbsa.csv")
fips <- read.csv("~/Dropbox/sharelatex/Speed and PK/Data/Crosswalks/fipscodecbsa.csv")
fips$cbsa
mrpfips <- merge(fips,mrpspeed,by="cbsa")
out <- mapply(function(x)substring(x, 0, 2),mrpfips$county)
state.fips$sfips <- str_pad(state.fips$fips,width=2,side = "left",pad = "0")
state.fips$abb[match(state.fips$sfips,out)]
out
mrpfips$county
state.fips$sfips <- str_pad(state.fips$fips,width=2,side = "left",pad = "0")
state.fips$sfips
out
state.fips$abb[match(out.state.fips$sfips)]
state.fips$abb[match(out,state.fips$sfips)]
geo1 <- state.fips$abb[match(out,state.fips$sfips)]
out2 <- mapply(function(x)substring(x, 2, 5),mrpfips$cbsa)
out2
out2 <- mapply(function(x)substring(x, 3, 5),mrpfips$cbsa)
out2
paste(geo1,out2,sep="0")
paste(geo1,out2,sep="-")
geoids <- paste(geo1,out2,sep="-")
write.csv(geoids,file="geoids.csv")
geoids <- unique(paste(geo1,out2,sep="-"))
geoids
geoids <- sort(unique(paste(geo1,out2,sep="-")))
geoids
flights <- tbl_df(read.csv("~/Dropbox/R_wav/data/flights.csv"))
library(dplyr)
flights <- tbl_df(read.csv("~/Dropbox/R_wav/data/flights.csv"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("https://github.com/ylelkes/R_wav/blob/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/mammals.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
data("quick_facts", package="noncensus")
quick_facts
names(quick_facts)
with(quick_facts,data.frame(population_2013))
names(quick_facts)
with(quick_facts,data.frame(population_2013,percent_white,percent_black,per_capita_income,percent_high_school_grad,percent_BA,land_area))
save(with(quick_facts,data.frame(population_2013,percent_white,percent_black,per_capita_income,percent_high_school_grad,percent_BA,land_area)),file = "data/countydems.RData")
save(list = with(quick_facts,data.frame(population_2013,percent_white,percent_black,per_capita_income,percent_high_school_grad,percent_BA,land_area)),file = "data/countydems.RData")
with(quick_facts,data.frame(population_2013,percent_white,percent_black,per_capita_income,percent_high_school_grad,percent_BA,land_area))
countydems <- with(quick_facts,data.frame(population_2013,percent_white,percent_black,per_capita_income,percent_high_school_grad,percent_BA,land_area))
save(countydems,file = "data/countydems.RData")
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.sav"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.sav"))
foreign::read.spss(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.sav"))
data <- foreign::read.spss("~/Dropbox/R_wav/data/threeway.sav")
threeway <- foreign::read.spss("~/Dropbox/R_wav/data/threeway.sav")
threeway <- foreign::read.spss("~/Dropbox/R_wav/data/threeway.sav",to.data.frame=T)
save(threeway,"threeway.RData")
save(threeway,file="threeway.RData")
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
publish_dropbox()
publish_dropbox()
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/flights.RData"))
flights <- tbl_df(read.csv(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/flights.csv")))
publish_dropbox()
load("../data/immigrantattitudes.RData")
load("~/Dropbox/R_wav//data/immigrantattitudes.RData")
immdat$herkomstland <- car::recode(immdat$herkomstland,
"0='Netherlands';1='Turkey';2='Morocco';
3='Netherlands Antilles';4='Suriname';
5='Indonesia';6='Other Western origin';
7='Other non-Western origin'")
immdat$herkomstland
nonas <- subset(immdat,!is.na(ka13a109) & !is.na(herkomstland))
ggplot(nonas,aes(x=ka13a109))+geom_bar(aes(y = ..density..,group = herkomstland)) +   scale_y_continuous(labels = percent_format(),limits=c(0,1))+facet_wrap(~herkomstland,ncol=2)+theme_few()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle("Percent supporting each value by country of origin")
library(ggplot2)
library(scales)
ggplot(nonas,aes(x=ka13a109))+geom_bar(aes(y = ..density..,group = herkomstland)) +   scale_y_continuous(labels = percent_format(),limits=c(0,1))+facet_wrap(~herkomstland,ncol=2)+theme_few()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle("Percent supporting each value by country of origin")
library(ggthemes)
ggplot(nonas,aes(x=ka13a109))+geom_bar(aes(y = ..density..,group = herkomstland)) +   scale_y_continuous(labels = percent_format(),limits=c(0,1))+facet_wrap(~herkomstland,ncol=2)+theme_few()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle("Percent supporting each value by country of origin")
immdat$herkomstland <- car::recode(immdat$herkomstland,
"0='Netherlands';1='Turkey';2='Morocco';
3='Netherlands Antilles';4='Suriname';
5='Indonesia';6='Other Western origin';
7='Other non-Western origin'")
immdat$ka13a109 <- car::recode(immdat$ka13a109,
"1='maintaining law and order in the country';
2='increasing citizens political say';
3='preventing price increases';
4='protecting the freedom of speech'")
library(ggplot2)
library(scales)
nonas <- subset(immdat,!is.na(ka13a109) & !is.na(herkomstland))
library(ggthemes)
ggplot(nonas,aes(x=ka13a109))+geom_bar(aes(y = ..density..,group = herkomstland)) +   scale_y_continuous(labels = percent_format(),limits=c(0,1))+facet_wrap(~herkomstland,ncol=2)+theme_few()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle("Percent supporting each value by country of origin")
ggplot(nonas,aes(x=ka13a109))+geom_bar(aes(y = ..density..,group = herkomstland)) +facet_wrap(~herkomstland,ncol=2)+theme_few()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle("Percent supporting each value by country of origin")
names(imdat)
names(immdat)
relvals <- psych::alpha(immdat[,146:152])
relvals
relvals$keys
immdat$values <- rowMeans(immdat[,146:152])
immdat$values
relvals$total
names(relvals)
relvals$total
round(relvals$total[1],2)
relvals$total
relvals$total
relvals$total[2]
relvals$total[7]
reg4 <- glm(ka13a056==1~herkomstland+as.factor(oplzon)+leeftijd,immdat,family="binomial")
immdat$oplzon
as.factor(immdat$oplzon)
library(texreg)
?htmlreg
levels(as.factor(immdat$herkomstland))[2:8]
reg1 <- lm(values~herkomstland,immdat)
reg2 <- lm(nettohh_f~herkomstland,immdat)
reg3 <- lm(ka13a085~herkomstland,immdat)
immdat$voted <- car::recode(immdat$ka13a056,"1=1;else=0")
as.factor(immdat$oplzon)
reg4 <- glm(ka13a056==1~herkomstland+as.factor(oplzon)+leeftijd,immdat,family="binomial")
htmlreg(l = list(reg1,reg2,reg3,reg4))
screenreg(l = list(reg1,reg2,reg3,reg4))
as.factor(immdat$herkomstland)
reg3 <- lm(ka13a085~herkomstland,immdat)
summary(reg3)
reg3 <- lm(ka13a085~-1+herkomstland,immdat)
summary(reg3)
reg3 <- lm(ka13a085~-1+herkomstland,immdat)
summary(reg3)
publish_dropbox()
names(flights)
newvar <- rowMeans(flights$dep_delay - flights$arr_delay)
?rowMeans
newvar <- flights$dep_delay - flights$arr_delay
newvar
flights <- rbind(newvar, flights)
flights(names)
names(flights)
?dplyr
head(newvar)
rbind(newvar, flights)
flights <- rbind.fill(newvar, flights)
flights(names)
names(flights)
remove("newvar")
mutate(flights, caughtup = arr_delay - dep_delay)
head(flights)
head(flights)
names(flights)
flights$caughtup
mutate(flights, caughtup = arr_delay - dep_delay)
names(flights)
select(flights, carrier)
flights <- mutate(flights, caughtup = arr_delay - dep_delay)
names(flights)
flights %>% group_by(carriers) %>% summarize(mean(caughtup,na.rm=T))
flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T))
flights <- mutate(flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T)))
names(flights)
flights <- mutate(flights, caughtup = arr_delay - dep_delay)
names(flights)
flights <- tbl_df(read.csv(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/flights.csv")))
flights <- mutate(flights, caughtup = arr_delay - dep_delay)
flights <- mutate(
flights <- mutate(
flights <- mutate(
flights <- mutate(flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T)))
flights <- mutate(flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T)))
flights <- mutate(flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T)))
names(flights)
flights <- tbl_df(read.csv(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/flights.csv")))
flights <- mutate(flights, caughtup = arr_delay - dep_delay)
flights_carrier_gain <- mutate(flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T)))
arrange(flights_carrier_gain, mean(caughtup,na.rm=T))
names(flights_carrier_gain)
arrange(flights_carrier_gain, mean(caughtup,na.rm=T))
arrange(flights_carrier_gain, mean(caughtup,na.rm=T))
arrange(flights, caughtup)
rbind(flights, flights_carrier_gain)
flights_carrier_gain <- mutate(flights %>% group_by(carrier) %>% summarize(m=mean(caughtup,na.rm=T))) %>% arrange(m)
names(mammals)
mammals %>% mutate(species,m2l_ratio=mean(adult_body_mass_g / adult_head_body_len_mm)) %>% arrange(m2l_ratio)
mammals %>% group_by(species) %>% mutate((m2l_ratio=adult_body_mass_g / adult_head_body_len_m),na.rm=T) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals %>% group_by(species) %>% mutate((m2l_ratio=adult_body_mass_g / adult_head_body_len_mm),na.rm=T) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals %>% group_by(species) %>% mutate(m2l_ratio=adult_body_mass_g / adult_head_body_len_mm,na.rm=T) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals_new
mammals %>% group_by(order) %>% mutate(m2l_ratio=adult_body_mass_g / adult_head_body_len_mm,na.rm=T) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals_new
View(mammals_new)
mammals %>% mutate(m2l_ratio=adult_body_mass_g / adult_head_body_len_mm,na.rm=T) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals_new
mammals %>% mutate(m2l_ratio=adult_body_mass_g/adult_head_body_len_mm,na.rm=T) %>% select(2,7) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals_new
mammals %>% mutate(m2l_ratio=adult_body_mass_g/adult_head_body_len_mm,na.rm=T) %>% select(species,m2l_ratio) %>% arrange(desc(m2l_ratio))
mammals %>% group_by(species) %>% mutate(m2l_ratio=adult_body_mass_g/adult_head_body_len_mm,na.rm=T) %>% select(species,m2l_ratio) %>% arrange(desc(m2l_ratio))
mammals %>% group_by(order) %>% mutate(m2l_ratio=adult_body_mass_g/adult_head_body_len_mm,na.rm=T) %>% select(species,m2l_ratio) %>% arrange(desc(m2l_ratio))
mammals %>% group_by(order) %>% mutate(m2l_ratio=adult_body_mass_g/adult_head_body_len_mm,na.rm=T) %>% select(species,m2l_ratio) %>% arrange(desc(m2l_ratio)) -> out
View(out)
