summary(lm(y~a*b*c,data))
summary(lm(y~a*b+c,data))
out <- (lm(y~a*b*c,data))
j <- effect(out,term="a*b*c")
plot(j)
plot(j,multiline=T)
out <- (lm(y~a+b+c,data))
1. summary(out)
summary(out)
summary(out)
summary(j)
plot(eff1,multiline=T)
plot(eff1)
library(slidify)
load("~/Dropbox/sharelatex/Speed and PK/Data/mrpscore_cbsa.RData")
load("~/Dropbox/sharelatex/Speed and PK/Data/mrpspeed.RData")
mrpspeed$cbsa
library(stringr)
mrpspeed$cbsa
string <- mrpspeed$cbsa
num.chars <- nchar(string)
starts <- seq(1,num.chars, by=2)
starts <- mapply(FUN = function(x)seq(1,x, by=2),num.chars)
starts
sapply(starts, function(ii) {
substr(string, ii, ii+1)
})
nchar(string)
num.chars
starts
head(string)
sapply(starts, function(ii) {
substr(string, ii, ii+1)
}) -> out
out
out <- sapply(function(x)substring(x, 2, nchar(x)),mrpspeed$cbsa)
out <- mapply(function(x)substring(x, 2, nchar(x)),mrpspeed$cbsa)
otu
out
out <- mapply(function(x)substring(x, 4, nchar(x)),mrpspeed$cbsa)
out
out <- mapply(function(x)substring(x, 0, 2),mrpspeed$cbsa)
out
data(state.fips)
library(maps)
data(state.fips)
state.fips
str_pad(state.fips,width=2,side = "left",pad = "0")
str_pad(state.fips$fips,width=2,side = "left",pad = "0")
sfips <- str_pad(state.fips$fips,width=2,side = "left",pad = "0")
out
state.fips$sfips <- str_pad(state.fips$fips,width=2,side = "left",pad = "0")
state.fips$abb[match(sfips,out)]
sfips
state.fips$abb[match(state.fips$sfips,fips,out)]
state.fips$abb[match(state.fips$sfips,out)]
state.fips$sfips
out
out
mrpspeed$cbsa
fips <- load("~/Dropbox/sharelatex/Speed and PK/Data/Crosswalks/fipscodecbsa.csv")
fips <- read.csv("~/Dropbox/sharelatex/Speed and PK/Data/Crosswalks/fipscodecbsa.csv")
fips$cbsa
mrpfips <- merge(fips,mrpspeed,by="cbsa")
out <- mapply(function(x)substring(x, 0, 2),mrpfips$county)
state.fips$sfips <- str_pad(state.fips$fips,width=2,side = "left",pad = "0")
state.fips$abb[match(state.fips$sfips,out)]
out
mrpfips$county
state.fips$sfips <- str_pad(state.fips$fips,width=2,side = "left",pad = "0")
state.fips$sfips
out
state.fips$abb[match(out.state.fips$sfips)]
state.fips$abb[match(out,state.fips$sfips)]
geo1 <- state.fips$abb[match(out,state.fips$sfips)]
out2 <- mapply(function(x)substring(x, 2, 5),mrpfips$cbsa)
out2
out2 <- mapply(function(x)substring(x, 3, 5),mrpfips$cbsa)
out2
paste(geo1,out2,sep="0")
paste(geo1,out2,sep="-")
geoids <- paste(geo1,out2,sep="-")
write.csv(geoids,file="geoids.csv")
geoids <- unique(paste(geo1,out2,sep="-"))
geoids
geoids <- sort(unique(paste(geo1,out2,sep="-")))
geoids
flights <- tbl_df(read.csv("~/Dropbox/R_wav/data/flights.csv"))
library(dplyr)
flights <- tbl_df(read.csv("~/Dropbox/R_wav/data/flights.csv"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("https://github.com/ylelkes/R_wav/blob/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/mammals.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
data("quick_facts", package="noncensus")
quick_facts
names(quick_facts)
with(quick_facts,data.frame(population_2013))
names(quick_facts)
with(quick_facts,data.frame(population_2013,percent_white,percent_black,per_capita_income,percent_high_school_grad,percent_BA,land_area))
save(with(quick_facts,data.frame(population_2013,percent_white,percent_black,per_capita_income,percent_high_school_grad,percent_BA,land_area)),file = "data/countydems.RData")
save(list = with(quick_facts,data.frame(population_2013,percent_white,percent_black,per_capita_income,percent_high_school_grad,percent_BA,land_area)),file = "data/countydems.RData")
with(quick_facts,data.frame(population_2013,percent_white,percent_black,per_capita_income,percent_high_school_grad,percent_BA,land_area))
countydems <- with(quick_facts,data.frame(population_2013,percent_white,percent_black,per_capita_income,percent_high_school_grad,percent_BA,land_area))
save(countydems,file = "data/countydems.RData")
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.sav"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.sav"))
foreign::read.spss(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.sav"))
data <- foreign::read.spss("~/Dropbox/R_wav/data/threeway.sav")
threeway <- foreign::read.spss("~/Dropbox/R_wav/data/threeway.sav")
threeway <- foreign::read.spss("~/Dropbox/R_wav/data/threeway.sav",to.data.frame=T)
save(threeway,"threeway.RData")
save(threeway,file="threeway.RData")
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/speedcbsa.RData"))
publish_dropbox()
publish_dropbox()
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/flights.RData"))
flights <- tbl_df(read.csv(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/flights.csv")))
publish_dropbox()
load("../data/immigrantattitudes.RData")
load("~/Dropbox/R_wav//data/immigrantattitudes.RData")
immdat$herkomstland <- car::recode(immdat$herkomstland,
"0='Netherlands';1='Turkey';2='Morocco';
3='Netherlands Antilles';4='Suriname';
5='Indonesia';6='Other Western origin';
7='Other non-Western origin'")
immdat$herkomstland
nonas <- subset(immdat,!is.na(ka13a109) & !is.na(herkomstland))
ggplot(nonas,aes(x=ka13a109))+geom_bar(aes(y = ..density..,group = herkomstland)) +   scale_y_continuous(labels = percent_format(),limits=c(0,1))+facet_wrap(~herkomstland,ncol=2)+theme_few()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle("Percent supporting each value by country of origin")
library(ggplot2)
library(scales)
ggplot(nonas,aes(x=ka13a109))+geom_bar(aes(y = ..density..,group = herkomstland)) +   scale_y_continuous(labels = percent_format(),limits=c(0,1))+facet_wrap(~herkomstland,ncol=2)+theme_few()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle("Percent supporting each value by country of origin")
library(ggthemes)
ggplot(nonas,aes(x=ka13a109))+geom_bar(aes(y = ..density..,group = herkomstland)) +   scale_y_continuous(labels = percent_format(),limits=c(0,1))+facet_wrap(~herkomstland,ncol=2)+theme_few()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle("Percent supporting each value by country of origin")
immdat$herkomstland <- car::recode(immdat$herkomstland,
"0='Netherlands';1='Turkey';2='Morocco';
3='Netherlands Antilles';4='Suriname';
5='Indonesia';6='Other Western origin';
7='Other non-Western origin'")
immdat$ka13a109 <- car::recode(immdat$ka13a109,
"1='maintaining law and order in the country';
2='increasing citizens political say';
3='preventing price increases';
4='protecting the freedom of speech'")
library(ggplot2)
library(scales)
nonas <- subset(immdat,!is.na(ka13a109) & !is.na(herkomstland))
library(ggthemes)
ggplot(nonas,aes(x=ka13a109))+geom_bar(aes(y = ..density..,group = herkomstland)) +   scale_y_continuous(labels = percent_format(),limits=c(0,1))+facet_wrap(~herkomstland,ncol=2)+theme_few()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle("Percent supporting each value by country of origin")
ggplot(nonas,aes(x=ka13a109))+geom_bar(aes(y = ..density..,group = herkomstland)) +facet_wrap(~herkomstland,ncol=2)+theme_few()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle("Percent supporting each value by country of origin")
names(imdat)
names(immdat)
relvals <- psych::alpha(immdat[,146:152])
relvals
relvals$keys
immdat$values <- rowMeans(immdat[,146:152])
immdat$values
relvals$total
names(relvals)
relvals$total
round(relvals$total[1],2)
relvals$total
relvals$total
relvals$total[2]
relvals$total[7]
reg4 <- glm(ka13a056==1~herkomstland+as.factor(oplzon)+leeftijd,immdat,family="binomial")
immdat$oplzon
as.factor(immdat$oplzon)
library(texreg)
?htmlreg
levels(as.factor(immdat$herkomstland))[2:8]
reg1 <- lm(values~herkomstland,immdat)
reg2 <- lm(nettohh_f~herkomstland,immdat)
reg3 <- lm(ka13a085~herkomstland,immdat)
immdat$voted <- car::recode(immdat$ka13a056,"1=1;else=0")
as.factor(immdat$oplzon)
reg4 <- glm(ka13a056==1~herkomstland+as.factor(oplzon)+leeftijd,immdat,family="binomial")
htmlreg(l = list(reg1,reg2,reg3,reg4))
screenreg(l = list(reg1,reg2,reg3,reg4))
as.factor(immdat$herkomstland)
reg3 <- lm(ka13a085~herkomstland,immdat)
summary(reg3)
reg3 <- lm(ka13a085~-1+herkomstland,immdat)
summary(reg3)
reg3 <- lm(ka13a085~-1+herkomstland,immdat)
summary(reg3)
publish_dropbox()
names(flights)
newvar <- rowMeans(flights$dep_delay - flights$arr_delay)
?rowMeans
newvar <- flights$dep_delay - flights$arr_delay
newvar
flights <- rbind(newvar, flights)
flights(names)
names(flights)
?dplyr
head(newvar)
rbind(newvar, flights)
flights <- rbind.fill(newvar, flights)
flights(names)
names(flights)
remove("newvar")
mutate(flights, caughtup = arr_delay - dep_delay)
head(flights)
head(flights)
names(flights)
flights$caughtup
mutate(flights, caughtup = arr_delay - dep_delay)
names(flights)
select(flights, carrier)
flights <- mutate(flights, caughtup = arr_delay - dep_delay)
names(flights)
flights %>% group_by(carriers) %>% summarize(mean(caughtup,na.rm=T))
flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T))
flights <- mutate(flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T)))
names(flights)
flights <- mutate(flights, caughtup = arr_delay - dep_delay)
names(flights)
flights <- tbl_df(read.csv(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/flights.csv")))
flights <- mutate(flights, caughtup = arr_delay - dep_delay)
flights <- mutate(
flights <- mutate(
flights <- mutate(
flights <- mutate(flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T)))
flights <- mutate(flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T)))
flights <- mutate(flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T)))
names(flights)
flights <- tbl_df(read.csv(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/flights.csv")))
flights <- mutate(flights, caughtup = arr_delay - dep_delay)
flights_carrier_gain <- mutate(flights %>% group_by(carrier) %>% summarize(mean(caughtup,na.rm=T)))
arrange(flights_carrier_gain, mean(caughtup,na.rm=T))
names(flights_carrier_gain)
arrange(flights_carrier_gain, mean(caughtup,na.rm=T))
arrange(flights_carrier_gain, mean(caughtup,na.rm=T))
arrange(flights, caughtup)
rbind(flights, flights_carrier_gain)
flights_carrier_gain <- mutate(flights %>% group_by(carrier) %>% summarize(m=mean(caughtup,na.rm=T))) %>% arrange(m)
names(mammals)
mammals %>% mutate(species,m2l_ratio=mean(adult_body_mass_g / adult_head_body_len_mm)) %>% arrange(m2l_ratio)
mammals %>% group_by(species) %>% mutate((m2l_ratio=adult_body_mass_g / adult_head_body_len_m),na.rm=T) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals %>% group_by(species) %>% mutate((m2l_ratio=adult_body_mass_g / adult_head_body_len_mm),na.rm=T) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals %>% group_by(species) %>% mutate(m2l_ratio=adult_body_mass_g / adult_head_body_len_mm,na.rm=T) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals_new
mammals %>% group_by(order) %>% mutate(m2l_ratio=adult_body_mass_g / adult_head_body_len_mm,na.rm=T) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals_new
View(mammals_new)
mammals %>% mutate(m2l_ratio=adult_body_mass_g / adult_head_body_len_mm,na.rm=T) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals_new
mammals %>% mutate(m2l_ratio=adult_body_mass_g/adult_head_body_len_mm,na.rm=T) %>% select(2,7) %>% arrange(desc(m2l_ratio)) -> mammals_new
mammals_new
mammals %>% mutate(m2l_ratio=adult_body_mass_g/adult_head_body_len_mm,na.rm=T) %>% select(species,m2l_ratio) %>% arrange(desc(m2l_ratio))
mammals %>% group_by(species) %>% mutate(m2l_ratio=adult_body_mass_g/adult_head_body_len_mm,na.rm=T) %>% select(species,m2l_ratio) %>% arrange(desc(m2l_ratio))
mammals %>% group_by(order) %>% mutate(m2l_ratio=adult_body_mass_g/adult_head_body_len_mm,na.rm=T) %>% select(species,m2l_ratio) %>% arrange(desc(m2l_ratio))
mammals %>% group_by(order) %>% mutate(m2l_ratio=adult_body_mass_g/adult_head_body_len_mm,na.rm=T) %>% select(species,m2l_ratio) %>% arrange(desc(m2l_ratio)) -> out
View(out)
library(Zelig)
library(ggplot2)
z1 <- zelig(formula =cons ~ price * income, data = Icecream )
z1 <- zelig(formula =cons ~ price * income, data = Icecream,model = "Gaussian")
library(Ecdat)
z1 <- zelig(formula =cons ~ price * income, data = Icecream,model = "normal")
Icecream$price
?setx
setx(z1,price=.5)
setx(z1,price=0:1)
z1 <- zelig(formula =cons ~ price * income, data = Icecream,model = "normal")
setx(z1,price=0:1)
setx(z1,price=.5)
setx(z1,price=.5:.6)
setz1 <- setx(z1,price=.5:.6)
s.out <- sim(z1, x = setz1)
summary(s.out)
setz1 <- setx(z1,price=.5)
s.out <- sim(z1, x = setz1)
summary(s.out)
setz1 <- setx(z1,price=.5,income=40)
s.out <- sim(z1, x = setz1)
summary(s.out)
summary(s.out)
summary(s.out)
setz1 <- setx(z1,price=.5,income=40)
s.out <- sim(z1, x = setz1)
summary(s.out)
setz1 <- setx(z1,price=.5,income=c(40,50))
s.out <- sim(z1, x = setz1)
summary(s.out)
setz1 <- setx(z1,price=.5,income=c(40:50))
s.out <- sim(z1, x = setz1)
summary(s.out)
setz1 <- setx(z1,price=.5,income=c(40:50))
s.out <- sim(z1, x = setz1)
summary(s.out)
setz1 <- setx(z1,price=.5:.7,income=c(40:50))
s.out <- sim(z1, x = setz1)
summary(s.out)
setz1 <- setx(z1,price=.5,income=c(40:50))
s.out <- sim(z1, x = setz1)
summary(s.out)
setz1 <- setx(z1,price=.5)
s.out <- sim(z1, x = setz1)
summary(s.out)
s.out <- sim(z1, x = setz1)
library(Zelig)
library(Ecdat)
z1 <- zelig(formula =cons ~ price * income, data = Icecream,model = "normal")
setz1 <- setx(z1,price=.5)
s.out <- sim(z1, x = setz1)
plot(s.otu)
plot(out)
s.out <- sim(z1, x = setz1)
plot(s.out)
plot(s.out)
plot(s.out)
s.out
s.out <- sim(z1, x = setz1)
s.out
summary(s.out)
plot(s.out$qi)
plot(s.out)
summary(s.out)
setz1 <- setx(z1,price=.5,income=40:50)
s.out <- sim(z1, x = setz1)
out
s.out
summary(s.out)
setx1 <- setx(z1,price=.5)
setx2 <- setx(z1,price=.75)
s.out <- sim(z1, x =  setx1,x1 = setx2)
summary(s.out)
esoph
source("http://bioconductor.org/biocLite.R")
biocLite("colonCA")
biocLite("colonCA")
mean()
mean
mad
square.it(6)
square.it <- function(x) {
square <- x * x
return(square)
}
zero1(1:100)
zero1
square.it(6)
xy <- function(x,y) {
xy <- x * y
return(xy)
}
xy(6)
xy(6,4)
zero1 <- function(x){
x-min(x)/(max(x)-min(x)
}
zero1 <- function(x){
x-min(x)/(max(x)-min(x))
}
zero1(rnorm(0:100))
mtcars$cyl
zero1(mtcars$cyl)
x-min(x)/(min(x)-max(x))
zero1 <- function(x){
x-min(x)/(min(x)-max(x))
}
zero1(mtcars$cyl)
zero1
zero1 <- function(x){
x-min(x)/(max(x)-min(x))
}
zero1(mtcars$cyl)
mtcars$cyl
min(mtcars$cyl)
zero1 <- function(x){
(x-min(x))/(max(x)-min(x))
}
zero1(mtcars$cyl)
zero1 <- function(x){
(x-min(x))/(max(x)-min(x))
}
zero1(mtcars$cyl)
mtcars$disp
ToothGrowth$len
ToothGrowth$dose
ToothGrowth$supp
lm(supp~dose,ToothGrowth)
lm(len~dose,ToothGrowth)
summary(lm(len~dose,ToothGrowth))
ToothGrowth$supp
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp <- within(hdp, {
Married <- factor(Married, levels = 0:1, labels = c("no", "yes"))
DID <- factor(DID)
HID <- factor(HID)
})
hdp
hdp$remission
hdp$DID
hdp$tumorsize
hdp$Age
hdp <- read.csv("http://www.ats.ucla.edu/stat/data/hdp.csv")
hdp$Experience
z1 <- zelig(formula =cons ~ price * income, data = Icecream,model = "logistic")
z1 <- zelig(formula =cons ~ price * income, data = Icecream,model = "logit")
hdp$Age
hdp$Sex
z1 <- zelig(formula =remission ~ Age + Sex, data = hdp,model = "logit")
summary(z1)
z1 <- zelig(formula =remission ~ Age * Sex, data = hdp,model = "logit")
summary(z1)
hdp$Experience
z1 <- zelig(formula =remission ~ Age + Experience, data = hdp,model = "logit")
summary(z1)
z1 <- zelig(formula =remission ~ Age * Experience, data = hdp,model = "logit")
summary(z1)
hdp$Married
z1 <- zelig(formula =remission ~ Age + Experience+Married, data = hdp,model = "logit")
summary(z1)
z1 <- zelig(formula =remission ~ Age * Experience+Married, data = hdp,model = "logit")
summary(z1)
z1 <- zelig(formula =remission ~ Age + Experience+Married, data = hdp,model = "logit")
hdp$Lawsuits
z1 <- zelig(formula =remission ~ Age + Lawsuits*Experience+Married, data = hdp,model = "logit")
summary(z1)
hdp$SmokingHx
z1 <- zelig(formula =remission ~ Age*SmokingHx + Lawsuits+Experience+Married, data = hdp,model = "logit")
summary(z1)
hdp$LengthofStay
hdp$Age
min(hdp$Age)
max(hdp$Age)
hdp$SmokingHx
plot(eff1)
data(Icecream)
r1 <- lm(formula = cons ~ price * income, data = Icecream)
eff1 <- effect(r1,term="price*income")
library(effects)
library(Ecdat)
data(Icecream)
r1 <- lm(formula = cons ~ price * income, data = Icecream)
eff1 <- effect(r1,term="price*income")
plot(eff1)
library(effects)
library(Ecdat)
data(Icecream)
r1 <- lm(formula = cons ~ price * income, data = Icecream)
eff1 <- effect(r1,term="price*income")
plot(eff1)
plot(eff1)
eff1
summary(s.out)
sim_list = replicate(n = 10,
expr = {data.frame(x = rnorm(50), y = rnorm(50))},
simplify = F)
sim_list
sim_list = replicate(n = 10,                     expr = {data.frame(x = rnorm(50), y = rnorm(50))},
simplify = F)
expr = {data.frame(x = rnorm(50), y = rnorm(50), z=rnorm(10))}, simplify = F)
sim_list = replicate(n = 10,
expr = {data.frame(x = rnorm(50), y = rnorm(50), z=rnorm(10)}, simplify = F)
sim_list = replicate(n = 10,
expr = {data.frame(x = rnorm(50), y = rnorm(50), z=rnorm(10))}, simplify = F)
library(slidify)
publish_dropbox()
publish_dropbox()
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.RData"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.RData"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.RData"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.RData"))
load(url("https://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.RData"))
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.RData"))
load("/Users/yphtach/Dropbox/Public/R_wav/threeway.RData")
load("/Users/yphtach/Dropbox/Public/R_wav/threeway.RData")
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.RData"))
publish_dropbox()
publish_dropbox()
names(eff1)
data.frame(eff1)
load(url("http://cdn.rawgit.com/ylelkes/R_wav/master/data/threeway.RData"))
out <-   lm(y~a*b*c,threeway)
r <- effects(out,term="a*b*c")
data.frame(r)
r
r <- effects::effect(out,term="a*b*c")
data.frame(r)
out <-   lm(y~a*b*c,threeway)
r <- effects::effect(out,term="a*b*c")
data.frame(r)
r1 <- data.frame(r)
ggplot(r1,aes(x=a,y=fit))+facet_grid(b~c)+geom_line()
r1 <- data.frame(r)
ggplot(r1,aes(x=a,y=fit))+facet_grid(b~c)+geom_line()
ggplot(r1,aes(x=a,y=fit))+facet_grid(b~c)+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower))
ggplot(r1,aes(x=a,y=fit,group=b))+facet_wrap(~c)+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower))
ggplot(r1,aes(x=a,y=fit,group=b))+facet_wrap(~c)+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower,fill=b),aes=2)
ggplot(r1,aes(x=a,y=fit,group=b))+facet_wrap(~c)+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower,fill=b),aes=.3)
ggplot(r1,aes(x=a,y=fit,group=as.factor(b)))+facet_wrap(~c)+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower,fill=b),aes=.3)
ggplot(r1,aes(x=a,y=fit,group=as.factor(b)))+facet_wrap(~c)+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower,fill=as.factor(b)),aes=.3)
ggplot(r1,aes(x=a,y=fit,group=as.factor(b)))+facet_wrap(~c)+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower,fill=as.factor(b)),aes=.01)
ggplot(r1,aes(x=a,y=fit,group=as.factor(b)))+facet_wrap(~c)+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower,fill=as.factor(b)))
ggplot(r1,aes(x=a,y=fit,group=as.factor(b)),aes=3)+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower,fill=as.factor(b)))
ggplot(r1,aes(x=a,y=fit,group=as.factor(b)))+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower,fill=as.factor(b)),alpha=.3)
ggplot(r1,aes(x=a,y=fit,group=as.factor(b)))+facet_wrap(~c)+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower,fill=as.factor(b)),alpha=.3)
ggplot(r1,aes(x=a,y=fit))+facet_wrap(~c)+geom_line()+geom_ribbon(aes(ymax=upper,ymin=lower),alpha=.3)+facet_grid(b~c)
