{
    "contents" : "---\ntitle       : \nsubtitle    : \nauthor      : \njob         : \nframework   : io2012        # {io2012, html5slides, shower, dzslides, ...}\nhighlighter : highlight.js  # {highlight.js, prettify, highlight}\nhitheme     : tomorrow      # \nwidgets     : []            # {mathjax, quiz, bootstrap}\nmode        : selfcontained # {standalone, draft}\nknit        : slidify::knit2slides\n---\n\n---\n## Getting data into shape\n\n1. Ran 10 experiments, now want to do a meta-analysis. \n2. I want to match my country level data with my individual-level data.\n3. I have time series data that looks like this:\n\n```{r,echo=FALSE}\nx <- read.table(textConnection(\n\"Code Country        1950    1951    1952    1953    1954\nAFG  Afghanistan    20,249  21,352  22,532  23,557  24,555\nALB  Albania        8,097   8,986   10,058  11,123  12,246\"), header=TRUE)\nhead(x)\n```\n\n---\n## I want it to look like this:\n\n```{r,echo=FALSE,warning=F,message=F}\nlibrary(reshape2)\nhead(melt(x,id.vars = c(\"Code\",\"Country\")))\n```\n\n---\n## Stacking dataframes with rbind\n\n1. Try the following:\n```\nload(url(\"https://cdn.rawgit.com/ylelkes/R_wav/master/data/rbindexercises.RData\"))\n```\n\n2. First, use colnames to look at the names of df1,df2,df3.\n3. use rbind to stack df1, df2, and df3 into one dataframe. \n4. Now try to add df4 to the stacked dataframe. How do we fix it?\n5. Now add df5. Doesn't work? Try plyr::rbind.fill\n6. What does the variables third and fourth look like for the df1:df4?\n\n---\n## Merging in R is *usually* pretty simple with the merge command.\n<iframe src=\"https://stat.ethz.ch/R-manual/R-devel/library/base/html/merge.html\"></iframe>\n\n\n\n---\n## Exercise\n1. Let's start with merging two dataframes\n3. You always need a key that links data.frames, individual, country, etc.\n3. Merge the US state characteristic files state.x77 with this, with the variable Obamafeelings indicating a score on a feeling thermometer from 0=cold to 100=hot \n```\nload(url(\"https://cdn.rawgit.com/ylelkes/R_wav/master/data/anes.RData\"))\n```\n4. Hint: state.x77 needs to be converted to a dataframe\n5. What state characteristics predict liking Obama?\n\n---\n## Sometimes you want to merge based on multiple keys\n\n1. See what happens, and what your answers look like if you merge two of the datasets in the following file, first by country.name only, then by program.name only, then by both country.name and program.name. Note the dimensions, number of variables. \n\n```\nload(url(\"https://rawgit.com/ylelkes/R_wav/master/data/foreignaid.RData\"))\n```\n\n---\n## Sometimes we want to merge more than two datasets.\n\n1. Use the following function to merge all the Aid datasets: `reshape::merge_all`\n2. Note, there are other ways of merging data. With really big datasets (N=millions), we probably want to use data.table or plyr.  \n\n---\n## Reshaping data\n\n![Hadley Wickham](http://pix-media.s3.amazonaws.com/blog/1001/HadleyObama2.png)\n\n---\n## What makes data wide or long?\n\n```{r,results='markup',echo=F,warning=F}\nlibrary(datasets)\nlibrary(reshape2)\ndata(UKLungDeaths)\nlibrary(data.table)\nyr <- floor(tt <- time(mdeaths))\ndate=paste(month.abb[12*(tt - yr)],yr)\nlibrary(stringr)\nmonth <- sapply(strsplit(as.character(date), \" \"), \"[\", 1)\nmonth = factor(month,levels=c(month.abb))\nyear <- sapply(strsplit(as.character(date), \" \"), \"[\", 2)\nUKLung <- data.table(data.frame(ldeaths,mdeaths,fdeaths,month,year))\nhead(UKLung)\n```\n\n---\n## What makes data wide or long?\n```{r,echo=FALSE}\nmeltedlungs <- melt(UKLung,id.vars = c(\"month\",\"year\"))\nmeltedlungs\n```\n\n---\n## Why is this useful?\n\n---\n## Why is this useful?\n```{r,message=FALSE}\nlibrary(dplyr)\nmeltedlungs %>% group_by(year) %>% summarise(average=mean(value),sd=sd(value),N=n())\n```\n\n---\n## Why is this useful?\n```{r}\nlibrary(dplyr)\nmeltedlungs %>% group_by(year,variable) %>% summarise(average=mean(value),sd=sd(value),N=n())\n```\n\n## Why is this useful?\n```{r}\nlibrary(ggplot2)\nggplot(meltedlungs,aes(x=year,y=value,group=variable,colour=variable))+geom_smooth() \n```\n\n---\n## reshape2 package\n* Reshape2 is based on two functions\n* melt takes wide-format data and melts it into long-format data.\n* cast takes long-format data and casts it into wide-format data.\n\n---\n## melting data\n\n```{r}\nmelt(UKLung,id.vars=c(\"month\",\"year\"))\n```\n\n---\n## melting data\n\n```{r}\nmeltedlungs <- melt(UKLung,id.vars=c(\"month\",\"year\"),\n                    variable.name = \"Gender\",value.name = \"Deaths\")\nmeltedlungs$Gende\n```\n\n---\n## Getting data from long to wide\n\n```{r}\nhead(dcast(meltedlungs,year+month~Gender,value.var = \"Deaths\",fun.aggregate=mean,na.rm=T))\n```\n\n---\n## Exercises \n1. Melt the `airquality` data into long form, so that each of the measurements are in one column.\n2. create a ggplot that tracks each measurement in a different facet.\n3. Recode the variable name with more descriptive labels, and change the order of the variable so that the order that appear in the legend are reversed. One way to do this is with the factor() function.  \n4. cast the new data frame so you get yearly measurements in wide format.\n\n---\n## dplyr\n1. Most useful package (for me) in R. \n2. Another St. Wickham creation. \n3. A tool for data exploration and transformation\n\n---\n## 5 verbs\n* filter: keep rows matching criteria\n* select: pick columns by name\n* arrange: reorder rows \n* mutate: add new variables\n* summarise: reduce variables to values\n\n--- \n## What is our general m.o. if wanted rows 1,3, & 4?\n```{r}\ndf <- data.frame(   color = c(\"blue\", \"black\", \"blue\", \"blue\", \"black\"),    value = 1:5)\nhead(df)\n```\n\n--- \n## What if we just wanted the \"color\" column\n\n--- \n## What if we just wanted the \"color\" column\n```{r}\nselect(df,color)\n```\n\n--- \n## Or if we didn't want the \"color\" column\n\n--- \n## Or if we didn't want the \"color\" column\n```{r}\nselect(df,-color)\n```\n\n--- \n## Take a look at the handout\n```{r}\nlibrary(nycflights13)\ndata(nycflights13)\n```\n\n",
    "created" : 1442839773583.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1209504430",
    "id" : "2D63D4AA",
    "lastKnownWriteTime" : 1442841029,
    "path" : "C:/Users/Yphtach/Dropbox/R_wav/week4-a/index.Rmd",
    "project_path" : "week4-a/index.Rmd",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_markdown"
}