{
    "contents" : "---\ntitle: \"Make these plots\"\nauthor: \"ylelkes\"\ndate: \"September 7, 2015\"\noutput: pdf_document\n---\n\n## Make these plots\n\nUse the Fair data in the Ecdat package\n[Read about it here](https://cran.r-project.org/web/packages/Ecdat/Ecdat.pdf)\n\n## Part 1\n```{r,echo=F,warning=F,message=F}\nlibrary(ggplot2)\nlibrary(Ecdat)\nggplot(Star,aes(tmathssk))+geom_histogram()\nggplot(Star,aes(tmathssk))+geom_density()\nggplot(Star,aes(tmathssk,fill=sex))+geom_density()\nggplot(Star,aes(tmathssk,fill=sex))+geom_density(alpha=.5)\nggplot(Star,aes(x=sex,y=tmathssk,fill=sex))+geom_boxplot(colour=\"purple\")\nggplot(Star,aes(x=totexpk,y=tmathssk))+geom_smooth()\nggplot(Star,aes(x=totexpk,y=tmathssk))+geom_smooth()+geom_point()\n\nlibrary(dplyr)\nnames(Star)\nStar$tmathssk\nStar %>% group_by(sex,race) %>% summarise(math=mean(tmathssk,na.rm=T),read=mean(treadssk,na.rm=T),sd(tmathssk),N=length(treadssk)) -> ta\n\ndf <- data.frame(a = c(3:24), b = letters[1:22])\nlibrary(plotrix)\n twogrp<-c(rnorm(10)+4,rnorm(10)+20)\n gap.barplot(twogrp,gap=c(3,4),xlab=\"Index\",ytics=c(3,6,17,20),\n  ylab=\"Group values\",main=\"Barplot with gap\")\n\n?gap.barplot\nggplot(mtcars,aes(mpg,disp))+geom_smooth(method=\"lm\")+scale_x_continuous(breaks=seq(10,40,by=1),limits=c(0,40))+scale_y_continuous(limits=c(200,400))+ geom_hline(200,lty=1)\na <- lm($mpg~mtcars$disp)\nb <- lm(mtcars$mpg~mtcars$hp)\nstargazer::stargazer(a,b)\n```\n\n## Part 2\n```{r,echo=F,warning=F,message=F}\nggplot(Star,aes(x=tmathssk,y=treadssk,colour=race))+geom_point()+facet_wrap(~sex)\nggplot(Star,aes(x=tmathssk,y=treadssk))+geom_point()+facet_grid(race~classk)\nggplot(Star,aes(x=tmathssk,y=treadssk,colour=sex))+geom_point()+facet_grid(race~classk)+geom_smooth(method=lm,colour=\"black\")\nggplot(Star,aes(x=tmathssk,y=treadssk,shape=sex,colour=freelunk))+geom_point()+facet_grid(race~classk)+geom_smooth(method=lm)\n```\n\nStill have time? Change the axis labels, add a title\n\n## Part 3\nHere are two datasets:\n\n\n```{r}\ntemperature_by_year <- \n  rio::import(\"https://rawgit.com/ylelkes/R_wav/master/data%20examples/temperature_by_year.RData\")\n\nfuturepast <- \n  rio::import(\"https://rawgit.com/ylelkes/R_wav/master/data%20examples/climatetemperatures.RData\")\n```\n\nThe file [climatetemperatures.RData](https://github.com/ylelkes/R_wav/blob/master/data%20examples/climatetemperatures.RData?raw=true) . Temperature_by_year is used in the first plot; futurepast is based off of 15 or so climate models predicting the temperature of european countries in the end of the 21st centure. Hint: The 95 percent confidence intervals (which are plotted below are 1.96 times the standard error over/under the mean)\n\n```{r,echo=F,warning=F,message=F,fig.width=8}\nggplot(temperature_by_year,aes(x=year,ymin=min,ymax=max,y=temperature))+geom_ribbon(alpha=.5,fill=\"red\")+geom_line()\n```\n\n```{r,echo=F,warning=F,message=F,fig.height=8}\nggplot(futurepast,aes(x=temperature,xmin=temperature-1.96*se,xmax=temperature+1.96*se,y=locator,colour=time))+geom_point()+geom_errorbarh()\n```\n\n\n## Part 4 \nScalesand themes\n```{r,echo=F}\ndrv_labels <- c(\"4\" = \"4wd\", \"f\" = \"fwd\", \"r\" = \"rwd\")\nggplot(mpg, aes(displ, hwy)) + \n  geom_point(aes(colour = drv)) +  \n  scale_colour_manual(labels = drv_labels,values = c(\"purple\",\"orange\",\"grey\",\"pink\"))\n```\n\n\nSpend a few minutes reading about [themes](http://docs.ggplot2.org/current/theme.html)\nCan you rotate the x-axis text and change the colour?\nCan you change the colour and size of the y-axis?\n\n```{r,echo=F}\ndrv_labels <- c(\"4\" = \"4wd\", \"f\" = \"fwd\", \"r\" = \"rwd\")\nggplot(mpg, aes(manufacturer,hwy)) + \n  geom_point(aes(colour = drv)) +  \n  scale_colour_manual(labels = drv_labels,values = c(\"purple\",\"orange\",\"grey\",\"pink\"))+theme(axis.text.x = element_text(angle = 90, hjust = 1,colour=\"black\"))+theme(axis.text.y = element_text(size=15,colour=\"black\"))\n```\n## RColor Brewer and ggthemr\n\n* How close to this graph can you get?\n* some hints: \n  * to order, try reorder(Origin, Total)\n  * Use coord_flip()\n  * You'll need RColorBrewer and ggthemes\n\n```{r}\nasylumdata <- \n  rio::import(\"https://rawgit.com/ylelkes/R_wav/master/data%20examples/asylumdata.csv\")\n```\n\n\n\n```{r,echo=F,fig.height=8}\nlibrary(\"RColorBrewer\")\nlibrary(ggthemes)\ncolourCount = length(unique(asylumdata$Origin))\ngetPalette = colorRampPalette(brewer.pal(3, \"YlGnBu\"))\nggplot(asylumdata, aes(reorder(Origin, Total),Total,fill=(reorder(Origin, Total))))+geom_bar(stat=\"identity\")+coord_flip()+ylab(\"Number of Asylum Seekers\")+xlab(\"Country of Origin\")+theme_economist()+theme(legend.position=\"none\")+scale_fill_manual(values = getPalette(colourCount))+ggtitle(\"Number of Refugees to Europe by Country\")\n```\n",
    "created" : 1441632949571.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "671690150",
    "id" : "9728805",
    "lastKnownWriteTime" : 1442472220,
    "path" : "~/Dropbox/R_wav/makethesegraphs.Rmd",
    "project_path" : "makethesegraphs.Rmd",
    "properties" : {
        "tempName" : "Untitled4"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}