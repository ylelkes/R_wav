{
    "contents" : "library(ggplot2)\nlibrary(plyr)\nlibrary(Hmisc)\nsetwd(\"~/Dropbox/SelectiveExposurePolarization\")\nload(\"data/study1/codedlong.RData\")\ndatal$pid3 <- relevel(datal$pid3,ref=\"Democrat\")\n\nlibrary(ggplot2)\nlibrary(polycor)\n\ndatal$lr1 <- car::recode(datal$lr1,\"'L'='Left';'M'='Objective';'R'='Right'\") \n\nlibrary(lme4)\na <- data.frame(prop.table(with(subset(datal,hs1=='Hard'), xtabs(weight~lr1+pid3)),2),task=\"Hard News Selection\")\nb <- data.frame(prop.table(with(subset(datal,hs1=='Soft'), xtabs(weight~lr1+pid3)),2),task=\"Soft News Selection\")\nc <- data.frame(prop.table(with(datal, xtabs(weight~videoslant1+pid3)),2),task=\"Obama vs. Romney Video\")\n\n\ndatal$tone <- car::recode(as.numeric(as.factor(datal$video1)),\"1:2='Negative';3:4='Positive'\")\n\n\nd <- data.frame(prop.table(with(datal, xtabs(weight~videoslant2+pid3)),2),task=\"Pelosi vs. Bachmann Video\")\ncolnames(a)[1] <- \"Slant\" \ncolnames(b)[1] <- \"Slant\" \ncolnames(c)[1] <- \"Slant\" \ncolnames(d)[1] <- \"Slant\" \nsource(\"../func.R\")\nlibrary(scales)\nlibrary(ggplot2)\na1 <- a\nb1 <- b\nfig1 <- rbind(a1,b1)\nggplot(fig1, aes(x=pid3,y=Freq,group=Slant,shape=Slant))+geom_point(aes(colour=Slant),size=3,alpha=.8)+facet_wrap(~task,nrow=2)+theme_bw()+ylim(0,100)+ scale_y_continuous(labels=percent,limits=c(.2,.8)) + scale_colour_manual(values=c(\"blue\",\"green\",\"red\"),name=\"Slant of Source\")+ylab(\"Percent of Time Chosen\")+xlab(\"Party ID\")+scale_shape(name=\"Slant of Source\")+theme(legend.position=\"bottom\")\nggsave(\"../talks/mpsa2013/fig1.png\",width=6,height=6, dpi = 700)\n\na1 <- a\nb1 <- b\nb1$Freq <- 0\nfig1 <- rbind(a1,b1)\nggplot(fig1, aes(x=pid3,y=Freq,group=Slant,shape=Slant))+geom_point(aes(colour=Slant),size=3,alpha=.8)+facet_wrap(~task,nrow=2)+theme_bw()+ylim(0,100)+ scale_y_continuous(labels=percent,limits=c(.2,.8)) + scale_colour_manual(values=c(\"blue\",\"green\",\"red\"),name=\"Slant of Source\")+ylab(\"Percent of Time Chosen\")+xlab(\"Party ID\")+scale_shape(name=\"Slant of Source\")+theme(legend.position=\"bottom\")\nggsave(\"../talks/mpsa2013/fig2.png\",width=6,height=6, dpi = 700)\n\na1 <- a\nb1 <- b\nfig1 <- rbind(a1,b1)\nggplot(fig1, aes(x=pid3,y=Freq,group=Slant,shape=Slant))+geom_point(aes(colour=Slant),size=3,alpha=.8)+facet_wrap(~task,nrow=2)+theme_bw()+ylim(0,100)+ scale_y_continuous(labels=percent,limits=c(.2,.8)) + scale_colour_manual(values=c(\"blue\",\"green\",\"red\"),name=\"Slant of Source\")+ylab(\"Percent of Time Chosen\")+xlab(\"Party ID\")+scale_shape(name=\"Slant of Source\")+theme(legend.position=\"bottom\")\nggsave(\"../talks/mpsa2013/fig3.png\",width=6,height=6, dpi = 700)\n\n\n\n\n\n\n\n\ndatal$videoslant1 <- as.factor(datal$videoslant1)\ndata$videoslant1 <- as.factor(data$videoslant1)\ndata$lr1 <- as.factor(data$lr1)\ndata$videoslant2 <- as.factor(data$videoslant2)\n\na <- glm(videoslant1~lr1,data,weight=weight, family=\"binomial\")\nb <- glm(videoslant2~lr1,data,weight=weight, family=\"binomial\")\ndata$lr1\ndata$lrsum <- as.factor(with(data,rowMeans(data.frame(lr1==\"R\",lr2==\"R\",lr3==\"R\",lr4==\"R\"))))\na <- glm(videoslant1~lrsum,data,weight=weight, family=\"binomial\")\na <- glm(videoslant2~lrsum,data,weight=weight, family=\"binomial\")\nlibrary(effects)\nb  <- effect(mod=a,term=\"lrsum\")\n\n#####################################################\n# ource preferences are associated with partisan affect -- more hostile evaluations of parties and party supporters (index), greater social distance (inter-marriage), and motivated reasoning.  three graphs (depending on whether all measures are available in all three studies) corresponding to three studies.  MAKE POINT THAT IT IS HARD NEWS SELECTORS WHO ARE ESPECIALLY POLARIZED (assuming that what Yph reported in last round of emails holds up).  also point out that the pattern is exacerbated among activists (not sure we need more graphs here)\n##\nlibrary(grid)\n\na <- ggplot(data,aes(x=zero1(selectivityz1),y=zero1(affectivepolarization)))+geom_smooth()+ylim(c(.5,1))+ggtitle(\"Interparty Feelings\")+theme_bw()+xlab(\"Latent Partisan Selectivity Score\")+scale_x_continuous(breaks=c(0,.5,1),labels=c(\"Prefers \\n Left\",.5,\"Prefers \\n Right\"))+ylab(\"Affective Polarization\")+opts(plot.margin = unit(c(.2,.8,.2,.2), \"cm\"))\n\nb <- ggplot(data,aes(x=zero1(selectivityz1),y=zero1(socialdistancepolarization)))+geom_smooth()+ylim(c(.5,1))+ggtitle(\"Interparty Marriage\")+theme_bw()+xlab(\"Latent Partisan Selectivity Score\")+scale_x_continuous(breaks=c(0,.5,1),labels=c(\"Prefers \\n Left\",.5,\"Prefers \\n Right\"))+ylab(\"Social Distance Polarization\")+opts(plot.margin = unit(c(.2,.8,.2,.1), \"cm\"))\ndata$\nc <- ggplot(data,aes(x=zero1(selectivityz1),y=zero1(elitesfeels)))+geom_smooth()+ylim(c(.5,1))+ggtitle(\"Congress\")+theme_bw()+xlab(\"Latent Partisan Selectivity Score\")+scale_x_continuous(breaks=c(0,.5,1),labels=c(\"Prefers \\n Left\",.5,\"Prefers \\n Right\"))+ylab(\"Social Distance Polarization\")+opts(plot.margin = unit(c(.2,.8,.2,.1), \"cm\"))\n\nd <- ggplot(data,aes(x=zero1(selectivityz1),y=zero1(hillarybush)))+geom_smooth()+ylim(c(.5,1))+ggtitle(\"Elites Prize\")+theme_bw()+xlab(\"Latent Partisan Selectivity Score\")+scale_x_continuous(breaks=c(0,.5,1),labels=c(\"Prefers \\n Left\",.5,\"Prefers \\n Right\"))+ylab(\"Social Distance Polarization\")+opts(plot.margin = unit(c(.2,.8,.2,.1), \"cm\"))\n\n# e <- ggplot(data,aes(x=zero1(selectivityz1),y=zero1(outpartyanimosity)))+geom_smooth()+ylim(c(.5,1))+ggtitle(\"Out-Party Animosity\")+theme_bw()+xlab(\"Latent Partisan Selectivity Score\")+scale_x_continuous(breaks=c(0,.5,1),labels=c(\"Prefers \\n Left\",.5,\"Prefers \\n Right\"))+ylab(\"Polarization Score\")+opts(plot.margin = unit(c(.2,.8,.2,.1), \"cm\"))\n\n\n\npdf(\"figure2.png\",width=8,height=8,dpi=1200)\nmultiplot(a,b,c,d,cols=2)\ndev.off()\nmultiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {\n  require(grid)\n  \n  # Make a list from the ... arguments and plotlist\n  plots <- c(list(...), plotlist)\n  \n  numPlots = length(plots)\n  \n  # If layout is NULL, then use 'cols' to determine layout\n  if (is.null(layout)) {\n    # Make the panel\n    # ncol: Number of columns of plots\n    # nrow: Number of rows needed, calculated from # of cols\n    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),\n                     ncol = cols, nrow = ceiling(numPlots/cols))\n  }\n  \n  if (numPlots==1) {\n    print(plots[[1]])\n    \n  } else {\n    # Set up the page\n    grid.newpage()\n    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))\n    \n    # Make each plot, in the correct location\n    for (i in 1:numPlots) {\n      # Get the i,j matrix positions of the regions that contain this subplot\n      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))\n      \n      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,\n                                      layout.pos.col = matchidx$col))\n    }\n  }\n}\n",
    "created" : 1442589042291.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "441415476",
    "id" : "D2005C77",
    "lastKnownWriteTime" : 1442589455,
    "path" : "~/Dropbox/SelectiveExposurePolarization/scripts/Figures.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}