{
    "contents" : "---\ntitle: \"Using R for Data Wrangling, Analysis, and Visualization\"\nauthor: \"Dr. Yphtach Lelkes\"\nhighlighter: highlight.js\noutput: pdf_document\njob: null\nknit: slidify::knit2slides\nmode: selfcontained\nhitheme: tomorrow\nsubtitle: 'Lecture 2: More getting started, R objects, Arithmetic'\nframework: io2012\nwidgets: []\n---\n\n## R projects\n\n---\n## Getting Help in R\nUse help to display the documentation for the function:\n`> help(functionname)`\n\n`> ?(functioname)`\n\nUse args for a quick reminder of the function arguments:\n`> args(functionname)`\n\nUse example to see examples of using the function:\n`> example(functionname)`\n\n---\n## Stackoverflow\n[stackoverflow](http://stackoverflow.com/questions/1296646/how-to-sort-a-dataframe-by-columns)\n\n---\n## Data and Good Housekeeping\n[An example of \"interactive\" data analysis](http://fortune.com/2013/04/17/damn-excel-how-the-most-important-software-application-of-all-time-is-ruining-the-world/)\n\n---\n## Automation\n1. Automate everything that can be automated\n2. Write a single script that executes all code from beginning to end.\n  * For each step in your project, whether it is data manipulation or figure creation, create a different script.\n  * Create a batch file that runs all scripts, in the right order, from start to finish. \n\n---\n## Directories\n1. Separate directories by function.\n2. Separate files into inputs and outputs.\n3. Make directories portable.\n\n---\n## Non-Ideal\n<div style='text-align: center;'>\n    <img width='560' src='../Week1-a/assets/img/baddir.png' />\n</div>\n\n---\n## Ideal\n<div style='text-align: center;'>\n    <img width='560' src='../Week1-a/assets/img/gooddir.png' />\n</div>\n\n\n\n---\n## Documenting your code\n```{r,eval=F}\n#############################################\n##  What\n##\tOriginal author\t\t\t\t\t\t\n## \tLast Edited: 10/31/14 by YL\n#############################################\n\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(stringr, dplyr, reshape2,foreign)\n```\n\n---\n## Documenting your code\n```{r,eval=F}\n#############################################\n##  What\n##\tOriginal author\t\t\t\t\t\t\n## \tLast Edited: 10/31/14 by YL\n#############################################\n\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(stringr, dplyr, reshape2,foreign)\n```\n\n---\n## Documenting your code\n```{r}\n## <- Comments in R\n## Computing the correlation between MPG and Horsepower\ncor(mtcars$mpg,mtcars$hp)\n\n## Table 1A, Lelkes (2014) Liberian Journal of Information Technology\nm1 <- lm(mpg~hp,mtcars)\n```\n\n---\n## Documenting your code\nWho is your code for?\n> Yourself\n\n> Your collaborators\n\n\n---\n##  Other points\n1. Use descriptive variable names:\n  * income not V019832\n2. Order functions and commands linearly\n\n---\n##  A small intro task\n1. Install the datasets library\n2. using data() load the beaver datasets (two datasets tracking the body temperature of two beavers); hint, use View()\n3. What is the body temperature of beaver1 on day 347, time 0\n4. Using mean(), what are the mean body temperatures of beaver1 and beaver2?\n\n---\n## Basics of R \n* R is a calculator for all basic math\n```{r}\n1+9*3/3\n```\n\n```\n+ Addition\n- Subtraction\n\\ Division\n* Multiplication\n```\n\n---\n## A little bit of searching\n* What is the square root of 246?\n* What is 6 to the 7th power?\n* What's the difference between 5*6 and 5 * 6?\n* Without changing any of the numbers, make 5*10-3 equal 35. \n\n---\n## Variables/Objects\n* The way R stores information (shortcuts to data)\n\n```\nfoo <- 5+3\nfoo\nfoo <- 5-3\nfoo\nob1 <- 93\nob2 <- 4\nob1-ob2\nob1*4\n```\n\n* Objects are case sensitive\n\n```\nFoo\n```\n\n---\n## Objects can be characters and strings\n\n```\nhi <- \"hello\"\nhi2 <- \"hello world\"\nhi3 <- \"5\"\nhi3/3\nsqrt(hi3)\n```\n\n---\n## Each object is assigned a class\n```\nj1 <- 67\nj2 <- \"67\"\nj3 <- \"Hello everybody!\"\nclass(j1)\nclass(j2)\nclass(j3)\nclass(sqrt)\nclass(mtcars)\n```\n* Lots more classes coming up. \n\n\n---\n## Vectors\n* One-dimensional array representing a collection of information stored in a specific order\n* c(): concatenate or combine\n\n```\nworld.pop <- c(2525779, 3026003, 3691173, 4449049, 5320817, 6127700,6916183)\nworld.pop\n```\n* Can use c() to combine several vectors\n\n```\npop.first <- c(2525779, 3026003, 3691173)\npop.second <- c(4449049, 5320817, 6127700)\npop.all <- c(pop.first, pop.second, 6916183)\npop.all\n```\n\n---\n## Indexing\n* To access specific elements of a vector, we use square brackets\n\n```\npop.all[3]\n```\n\n* Can access multiple elements by including a vector in the square brackets\n\n```\npop.all[c(3,4)]\npop.all[c(1,3,4)]\npop.all[c(1,3,10)]\n```\n\n* Can also remove elements\n```\npop.all[-5]\n```\n\n---\n## Hands on vectors\n* What happens here?\n\n```\npop.all[c(3,1)]\npop.all[-c(1,3)]\n```\n\n* In one line of code, create a vector that is the first two elements of pop.all, followed by the name of the city of your birth, followed by square root of 87, followed by all states in the US that begin with the letter W (hint, use the state.name vector)  \n\n---\n## You can apply arithmetic rules to vectors\n\n* Convert world population (in thousands) to millions\n\n```\npopthousands <- pop.all/1000\n```\n\n* Interact vectors\n\n```\nlotsofnumbers <- 90:96\npopthousands + lotsofnumbers\n```\n\n---\n## Matrices\n* A matrix is a two-dimensional vector\n* An array is k dimensions\n* Can be numeric OR string, not both\n\n```\nm1 <- matrix(c(1,2,3,4),nrow=2)\nm2 <- matrix(c(1,2,3,4,5,6),ncol=2)\nclass(m2)\nstr(m2)\nm3 <- matrix(letters,ncol=2)\nstr(m3)\n```\n\n---\n## Matrices\n* matrices are indexed by x and y coordinates [x,y]\n* Indexing matrices: \n  * What element is in the 6th row, 2nd column of m3?\n\n---\n## Download the following to your working directory\n* Download the following to your working directory (http://heather.cs.ucdavis.edu/~matloff/mtrush1.pgm) (hint getwd())\n\n\n```\nlibrary(pixmap)\nmtrush2 <- read.pnm(\"mtrush1.pgm\")\nmtrush2\nstr(mtrush2)\nplot(mtrush2)\nmtrush2@grey\ndim(mtrush2@grey)\nmtrush2@grey[84:163,135:177]\nmtrush2@grey[,104:164]=0\nplot(mtrush2)\n\n<- 1\nplot(mtrush2)\nmtrush2@grey[84:163,135:177] <- 0\nplot(mtrush2)\n```\n\n---\n## data.frames\n* Type of class you'll (probably) use most\n* Like a matrix, but each column can be any type of class\n\n```\nx <- 10:1\ny <- -4:5\nfirst10letters <- letters[1:10] \ndf <- data.frame(x,y,first10letters)\n```\n\n* Columns have to be the same length\n```\nfirst11letters <- letters[1:11] \ndata.frame(x,y,first11letters)\n```\n\n---\n## The object names are the column names\n\n```\nnames(df)\nathroughj <- letters[1:10] \ndf <- data.frame(x,y,athroughj)\nnames(df)\nnames(df) <- c(\"a1\",\"a2\",\"column3\")\nnames(df)\n```\n\n---\n## Learning about your data.frame\n\n```\nnrow(df)\nncol(df)\ndim(df)\nnames(df)[3]\nhead(df)\ntail(df)\ndf[1:3,3]\nclass(df[,3])\nclass(df[,1])\ndf$column3\ndf$ \n```\n\n---\n## Getting your data into R\n\n* Lots of ways\n```\nread.csv()\nlibrary(foreign)\nlibrary(haven)\nlibrary(rio)\n```\n\n---\n##\n* use read.csv() to read in \"Countries-Europe.csv\"\n* located in Week1-b/data examples\n* What is the median population of Europe?\n* What is the mean population/land area\n\n---\n## More complicated datasets\n* use the following libraries to read in child_data.sav\n  * foreign\n  * haven\n  * rio\n* What is the mean memory IQ of children older than 5?\n  * Hint, need to use both $ and a logical statement\n  * Logical statements: ==, >, <, !=\n  * 6==7\n  * 6<7\n\n---\n## Read in night.dta\n* Florence Nightingale's data on deaths from various causes in the Crimean War\n* See https://vincentarelbundock.github.io/Rdatasets/doc/HistData/Nightingale.html\n* How many people died of Wounds?\n* How many people died of Disease?\n* Try the following:\n  * Create a vector that holds the sum of Wounds, sum of Disease, sum of Other\n  * Create a vector that holds \"Wounds\",\"Disease,\"Other\"\n  * Use pie() to create a pie chart\n  * Can you do this in one line?\n\n",
    "created" : 1441354806811.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "697542365",
    "id" : "FB223DAC",
    "lastKnownWriteTime" : 1441638080,
    "path" : "~/Dropbox/R_wav/Week1-b/index.Rmd",
    "project_path" : "Week1-b/index.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}